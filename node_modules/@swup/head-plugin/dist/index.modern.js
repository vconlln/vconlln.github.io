import e from"@swup/plugin";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e},t.apply(this,arguments)}function s(e){return"title"!==e.localName&&!e.matches("[data-swup-theme]")}function n(e,t){return e.outerHTML===t.outerHTML}function o(e){return e.matches("link[rel=stylesheet][href]")}class r extends e{constructor(e={}){var r;super(),r=this,this.name="SwupHeadPlugin",this.requires={swup:">=4.6"},this.defaults={persistTags:!1,persistAssets:!1,awaitAssets:!1,timeout:3e3},this.options=void 0,this.updateHead=async function(e,{page:{}}){const t=e.to.document,{removed:i,added:a}=function(e,t,{shouldPersist:o=(()=>!1)}={}){const r=Array.from(e.children),i=Array.from(t.children),a=(l=r,i.reduce((e,t,s)=>(l.some(e=>n(t,e))||e.push({el:t,index:s}),e),[]));var l;const u=function(e,t){return e.reduce((e,s)=>(t.some(e=>n(s,e))||e.push({el:s}),e),[])}(r,i);return u.reverse().filter(({el:e})=>s(e)).filter(({el:e})=>!o(e)).forEach(({el:t})=>e.removeChild(t)),a.filter(({el:e})=>s(e)).forEach(({el:t,index:s=0})=>{e.insertBefore(t.cloneNode(!0),e.children[s+1]||null)}),{removed:u.map(({el:e})=>e),added:a.map(({el:e})=>e)}}(document.head,t.head,{shouldPersist:e=>r.isPersistentTag(e)});r.swup.log(`Removed ${i.length} / added ${a.length} tags in head`);const l=(u=document.documentElement).lang!==(c=t.documentElement).lang?(u.lang=c.lang,u.lang||null):null;var u,c;if(l&&r.swup.log(`Updated lang attribute: ${l}`),r.options.awaitAssets){const e=function(e,t=0){return e.filter(o).map(e=>function(e,t=0){const s=t=>{e.sheet?t():setTimeout(()=>s(t),10)};return new Promise(n=>{s(()=>n(e)),t>0&&setTimeout(()=>n(e),t)})}(e,t))}(a,r.options.timeout);e.length&&(r.swup.log(`Waiting for ${e.length} assets to load`),await Promise.all(e))}},this.options=t({},this.defaults,e),this.options.persistAssets&&!this.options.persistTags&&(this.options.persistTags="link[rel=stylesheet], script[src], style")}mount(){this.before("content:replace",this.updateHead)}isPersistentTag(e){const{persistTags:t}=this.options;return"function"==typeof t?t(e):"string"==typeof t&&t.length>0?e.matches(t):Boolean(t)}}export{r as default};
//# sourceMappingURL=index.modern.js.map
